!function(){"use strict";function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var e,r=document.querySelector(".profile"),n=r.querySelector(".profile__edit-button"),o=r.querySelector(".profile__add-button"),i=(3,function(t){if(Array.isArray(t))return t}(e=r.querySelectorAll(".popup"))||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,a,u=[],c=!0,l=!1;try{for(i=(r=r.call(t)).next,0;!(c=(n=i.call(r)).done)&&(u.push(n.value),3!==u.length);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(e)||function(e,r){if(e){if("string"==typeof e)return t(e,3);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,3):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=i[0],u=i[1],c=i[2],l=document.forms,s=l.profileForm,f=l.cardForm,p=s.elements,y=(p.profileName,p.aboutMe,f.elements),m=(y.imageName,y.imageSrc,r.querySelector(".profile__user-name"),r.querySelector(".profile__about-me"),"#cards"),v={formSelector:".popup__container",formFieldSet:".popup__content",inputSelector:".popup__item",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"button_inactive",inputErrorClass:"popup__item_type_error",errorClass:"popup__item-error_active"},b=Array.from(l);function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function _(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==d(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==d(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===d(o)?o:String(o)),n)}var o}var h=function(){function t(e,r){var n=e.data,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=n,this._renderer=o,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"addItem",value:function(t){this._container.append(t)}},{key:"addItemBegin",value:function(t){this._container.prepend(t)}},{key:"clear",value:function(){this.container.innerHTML=""}},{key:"renderItems",value:function(){var t=this;this._renderedItems.forEach((function(e){t._renderer(e)}))}}])&&_(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function g(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==S(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==S(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===S(o)?o:String(o)),n)}var o}var w=function(){function t(e,r){var n=e.data,o=e.handleOpenClick;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=n.name,this._link=n.link,this._handleOpenClick=o,this._selector=r}var e,r;return e=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".card").cloneNode(!0)}},{key:"renderCard",value:function(){this._element=this._getTemplate(),this._setEventListeners();var t=this._element.querySelector(".card__image");return t.src=this._link,t.alt=this._name,this._element.querySelector(".card__place-name").textContent=this._name,this._element}},{key:"_handleLikeBtn",value:function(t){t.target.classList.toggle("card__like-button_active")}},{key:"_handleRmBtn",value:function(){this._element.closest(".card").remove()}},{key:"_setEventListeners",value:function(){var t=this;this._element.querySelector(".card__image").addEventListener("click",(function(){return t._handleOpenClick(t._name,t._link)})),this._element.querySelector(".card__like-button").addEventListener("click",(function(e){return t._handleLikeBtn(e)})),this._element.querySelector(".card__trash-button").addEventListener("click",(function(){return t._handleRmBtn()}))}}])&&g(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function k(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==E(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===E(o)?o:String(o)),n)}var o}var j=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupSelector=e}var e,r;return e=t,(r=[{key:"open",value:function(){this._popupSelector.classList.add("popup_active"),this.setEventListeners()}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_active")}},{key:"setEventListeners",value:function(){var t=this,e=function e(r){("Escape"===r.key||r.target.classList.contains("popup__close-btn")||r.target.classList.contains("popup__image-container")||r.target.classList.contains("popup_active"))&&(t.close(),t._removeKeydownListener=document.removeEventListener("keydown",e),t._removeClickListener=t._popupSelector.removeEventListener("click",e))};document.addEventListener("keydown",e),this._popupSelector.addEventListener("click",e)}}])&&k(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function L(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==O(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===O(o)?o:String(o)),n)}var o}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=B(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},P.apply(this,arguments)}function C(t,e){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},C(t,e)}function B(t){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},B(t)}var q=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&C(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=B(n);if(o){var r=B(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===O(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,t)}return e=a,(r=[{key:"open",value:function(t,e){P(B(a.prototype),"open",this).call(this);var r=this._popupSelector.querySelector(".popup__image");this._popupSelector.querySelector(".popup__title-image").textContent=t,r.src=e,r.alt=t}}])&&L(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(j);function I(t){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},I(t)}function T(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==I(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===I(o)?o:String(o)),n)}var o}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=F(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},R.apply(this,arguments)}function A(t,e){return A=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},A(t,e)}function F(t){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},F(t)}var x=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&A(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=F(n);if(o){var r=F(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===I(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e){var r,n=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e))._handleFormSubmit=n,r._form=r._popupSelector.querySelector(".popup__container"),r}return e=a,(r=[{key:"close",value:function(){R(F(a.prototype),"close",this).call(this),this._form.reset()}},{key:"_getInputValues",value:function(){var t=this;return this._inputList=this._popupSelector.querySelectorAll(".popup__item"),this._formValues={},this._inputList.forEach((function(e){return t._formValues[e.name]=e.value})),this._formValues}},{key:"setEventListeners",value:function(){var t=this,e=function(){document.removeEventListener("keydown",r),t._popupSelector.removeEventListener("click",r),t._popupSelector.removeEventListener("submit",r)},r=function(r){"Escape"===r.key||r.target.classList.contains("popup__close-btn")||r.target.classList.contains("popup__image-container")||r.target.classList.contains("popup_active")?(t.close(),e()):r.target.classList.contains("popup__save-btn")&&(t._handleFormSubmit(t._getInputValues()),t.close(),e())};document.addEventListener("keydown",r),this._popupSelector.addEventListener("click",r),this._popupSelector.addEventListener("submit",r)}}])&&T(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(j);function V(t){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},V(t)}function U(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==V(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==V(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===V(o)?o:String(o)),n)}var o}var M=function(){function t(e){var r=e.profileName,n=e.aboutMe;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=r,this._job=n}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{nameUser:this._name,jobUser:this._job}}},{key:"setUserInfo",value:function(){document.querySelector(".profile__user-name").textContent=this._name,document.querySelector(".profile__about-me").textContent=this._job}}])&&U(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function z(t){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},z(t)}function N(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==z(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==z(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===z(o)?o:String(o)),n)}var o}var W=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formSelector=e.formSelector,this._formFieldSet=e.formFieldSet,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=r}var e,r;return e=t,(r=[{key:"_showInputError",value:function(t,e,r){var n=t.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=r,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t,e){var r=t.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),r.textContent="",r.classList.remove(this._errorClass)}},{key:"_isValid",value:function(t,e){e.validity.valid?this._hideInputError(t,e):this._showInputError(t,e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(t){return t.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(t,e){this._hasInvalidInput(t)?(e.classList.add(this._inactiveButtonClass),e.setAttribute("disabled",!0)):(e.classList.remove(this._inactiveButtonClass),e.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(t,e){var r=this,n=Array.from(e.querySelectorAll(this._inputSelector)),o=e.querySelector(this._submitButtonSelector);this._toggleButtonState(n,o),t.addEventListener("submit",(function(t){t.preventDefault(),setTimeout((function(){return r._toggleButtonState(n,o)}),200)})),n.forEach((function(t){t.addEventListener("input",(function(){r._isValid(e,t),r._toggleButtonState(n,o)}))}))}},{key:"enableValidation",value:function(){var t=this,e=this._formElement;Array.from(e.querySelectorAll(this._formFieldSet)).forEach((function(r){t._setEventListeners(e,r)}))}}])&&N(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),D=new h({data:[{name:"Valle de Yosemite",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/yosemite.jpg"},{name:"Lago Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/lake-louise.jpg"},{name:"Montañas Calvas",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/latemar.jpg"},{name:"Parque Nacional de la Vanoise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/lago.jpg"}],renderer:function(t){var e=new w({data:t,handleOpenClick:function(t,e){new q(c).open(t,e)}},m).renderCard();D.addItem(e)}},".cards"),H=new x({handleFormSubmit:function(t){var e=new w({data:t,handleOpenClick:function(t,e){new q(c).open(t,e)}},m).renderCard();D.addItemBegin(e)}},u),K=new x({handleFormSubmit:function(t){var e=new M(t);e.setUserInfo(),setTimeout((function(){return r=(t=e.getUserInfo()).nameUser,n=t.jobUser,i=(o=document.forms.profileForm.elements).profileName,a=o.aboutMe,i.value=r,void(a.value=n);var t,r,n,o,i,a}))}},a);b.forEach((function(t){new W(v,t).enableValidation()})),D.renderItems(),n.addEventListener("click",(function(){return K.open()})),o.addEventListener("click",(function(){return H.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,