!function(){"use strict";function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var e,n=document.querySelector(".profile"),r=n.querySelector(".profile__avatar"),o=n.querySelector(".profile__edit-button"),i=n.querySelector(".profile__add-button"),u=(6,function(t){if(Array.isArray(t))return t}(e=document.querySelectorAll(".popup"))||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,u,c=[],a=!0,l=!1;try{for(i=(n=n.call(t)).next,0;!(a=(r=i.call(n)).done)&&(c.push(r.value),6!==c.length);a=!0);}catch(t){l=!0,o=t}finally{try{if(!a&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return c}}(e)||function(e,n){if(e){if("string"==typeof e)return t(e,6);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,6):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=u[0],a=u[1],l=u[2],s=u[3],f=u[4],p=u[5],y=document.forms,v="#cards",b={formSelector:".popup__container",formFieldSet:".popup__content",inputSelector:".popup__item",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"button_inactive",inputErrorClass:"popup__item_type_error",errorClass:"popup__item-error_active"},h=Array.from(y);function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function d(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===m(o)?o:String(o)),r)}var o}var _=function(){function t(e,n){var r=e.data,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,n=[{key:"addItem",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"append";this._container[e](t)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var t=this;this.clear(),this._renderedItems.forEach((function(e){t._renderer(e)}))}}],n&&d(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function g(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==S(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===S(o)?o:String(o)),r)}var o}var w=function(){function t(e,n){var r=e.data,o=e.handleOpenClick,i=e.handleDeleteClick,u=e.handleLikeClick;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._likes=r.likes,this._name=r.name,this._link=r.link,this._owner=r.owner,this._id=r._id,this._handleOpenClick=o,this._handleDeleteClick=i,this._handleLikeClick=u,this._selector=n}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".card").cloneNode(!0)}},{key:"renderCard",value:function(){this._element=this._getTemplate(),this._setEventListeners();var t=this._element.querySelector(".card__image");return t.src=this._link,t.alt=this._name,this._element.querySelector(".card__place-name").textContent=this._name,this._showNumberLikes(),this._element}},{key:"isVerified",value:function(t){this._hasDustbin(t),this._isLiked(t)}},{key:"_hasDustbin",value:function(t){this._owner._id!==t._id&&(this._element.querySelector(".card__trash-button").style.visibility="hidden")}},{key:"_isLiked",value:function(t){this._likes.find((function(e){return e._id===t._id}))&&this._element.querySelector(".card__like-button").classList.add("card__like-button_active")}},{key:"_showNumberLikes",value:function(){this._element.querySelector(".card__likes-count").textContent=this._likes.length||void 0}},{key:"_handleLikeBtn",value:function(t){t.target.classList.toggle("card__like-button_active"),this._handleLikeClick(this._likes,this._id),this._showNumberLikes()}},{key:"handleRemover",value:function(){this._element.closest(".card").remove()}},{key:"_setEventListeners",value:function(){var t=this;this._element.querySelector(".card__image").addEventListener("click",(function(){return t._handleOpenClick(t._name,t._link)})),this._element.querySelector(".card__like-button").addEventListener("click",(function(e){return t._handleLikeBtn(e)})),this._element.querySelector(".card__trash-button").addEventListener("click",(function(){return t._handleDeleteClick(t._id)}))}}])&&g(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}var j=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupSelector=e}var e,n;return e=t,(n=[{key:"open",value:function(){this._popupSelector.classList.add("popup_active"),this.setEventListeners()}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_active")}},{key:"setEventListeners",value:function(){var t=this,e=function e(n){("Escape"===n.key||n.target.classList.contains("popup__close-btn")||n.target.classList.contains("popup__image-container")||n.target.classList.contains("popup_active"))&&(t.close(),document.removeEventListener("keydown",e),t._popupSelector.removeEventListener("click",e))};document.addEventListener("keydown",e),this._popupSelector.addEventListener("click",e)}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=T(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},L.apply(this,arguments)}function C(t,e){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},C(t,e)}function T(t){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},T(t)}var q=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&C(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=T(r);if(o){var n=T(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===O(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,t)}return e=u,(n=[{key:"open",value:function(t,e){L(T(u.prototype),"open",this).call(this);var n=this._popupSelector.querySelector(".popup__image");this._popupSelector.querySelector(".popup__title-image").textContent=t,n.src=e,n.alt=t}}])&&P(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(j);function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function I(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==R(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=D(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},B.apply(this,arguments)}function A(t,e){return A=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},A(t,e)}function D(t){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},D(t)}var U=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&A(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=D(r);if(o){var n=D(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===R(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n,r=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=r,n._form=n._popupSelector.querySelector(".popup__container"),n}return e=u,(n=[{key:"close",value:function(){B(D(u.prototype),"close",this).call(this),this._form.reset(),this._isDone()}},{key:"_isDone",value:function(){this._form.querySelector(".popup__processing-btn").style.visibility="hidden"}},{key:"_process",value:function(){this._form.querySelector(".popup__processing-btn").style.visibility="visible"}},{key:"_getInputValues",value:function(){var t=this;return this._inputList=this._popupSelector.querySelectorAll(".popup__item"),this._formValues={},this._inputList.forEach((function(e){return t._formValues[e.name]=e.value})),this._formValues}},{key:"setEventListeners",value:function(){var t=this,e=function(){document.removeEventListener("keydown",n),t._popupSelector.removeEventListener("click",n),t._popupSelector.removeEventListener("submit",n)},n=function(n){"Escape"===n.key||n.target.classList.contains("popup__close-btn")||n.target.classList.contains("popup__image-container")||n.target.classList.contains("popup_active")?(t.close(),e()):n.target.classList.contains("popup__save-btn")&&(t._handleFormSubmit(t._getInputValues()),e(),t._process())};document.addEventListener("keydown",n),this._popupSelector.addEventListener("click",n),this._popupSelector.addEventListener("submit",n)}}])&&I(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(j);function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}function F(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==x(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==x(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===x(o)?o:String(o)),r)}var o}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=N(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},V.apply(this,arguments)}function z(t,e){return z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},z(t,e)}function N(t){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},N(t)}var G=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&z(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=N(r);if(o){var n=N(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===x(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,t)}return e=u,(n=[{key:"open",value:function(t){V(N(u.prototype),"open",this).call(this),this._popupSelector.querySelector(".popup__text-error").textContent=t}}])&&F(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(j);function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function M(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==H(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==H(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===H(o)?o:String(o)),r)}var o}var J=function(){function t(e){var n=e.name,r=e.about,o=e.avatar;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=n,this._job=r,this._avatar=o}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._name,about:this._job,avatar:this._avatar}}},{key:"setUserInfo",value:function(){document.querySelector(".profile__user-name").textContent=this._name,document.querySelector(".profile__about-me").textContent=this._job}},{key:"setAvatar",value:function(){document.querySelector(".profile__avatar").style.backgroundImage="url(".concat(this._avatar,")")}}])&&M(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function $(t){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},$(t)}function K(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==$(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==$(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===$(o)?o:String(o)),r)}var o}var Q=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formSelector=e.formSelector,this._formFieldSet=e.formFieldSet,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=n}var e,n;return e=t,n=[{key:"_showInputError",value:function(t,e,n){var r=t.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),r.textContent=n,r.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t,e){var n=t.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),n.textContent="",n.classList.remove(this._errorClass)}},{key:"_isValid",value:function(t,e){e.validity.valid?this._hideInputError(t,e):this._showInputError(t,e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(t){return t.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(t,e){this._hasInvalidInput(t)?(e.classList.add(this._inactiveButtonClass),e.setAttribute("disabled",!0)):(e.classList.remove(this._inactiveButtonClass),e.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(t,e){var n=this,r=Array.from(e.querySelectorAll(this._inputSelector)),o=e.querySelector(this._submitButtonSelector);this._toggleButtonState(r,o),t.addEventListener("submit",(function(t){t.preventDefault(),setTimeout((function(){return n._toggleButtonState(r,o)}),1200)})),r.forEach((function(t){t.addEventListener("input",(function(){n._isValid(e,t),n._toggleButtonState(r,o)}))}))}},{key:"enableValidation",value:function(){var t=this,e=this._formElement;Array.from(e.querySelectorAll(this._formFieldSet)).forEach((function(n){t._setEventListeners(e,n)}))}}],n&&K(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function W(t){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},W(t)}function X(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==W(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==W(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===W(o)?o:String(o)),r)}var o}var Y=function(){function t(e){var n=e.baseUrl,r=e.headers,o=r.authorization,i=r["Content-Type"];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._authorization=o,this._contentType=i}var e,n;return e=t,n=[{key:"do",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=n?this._baseUrl+e+"/"+n:this._baseUrl+e;return fetch(r,{method:t,headers:{authorization:this._authorization}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status,"."))}))}},{key:"send",value:function(t,e,n,r){var o=this;return fetch(this._baseUrl+e,{method:t,headers:{authorization:this._authorization,"content-Type":this._contentType},body:JSON.stringify(n())}).then((function(){return o.do("GET",null!=r?r:e)}))}}],n&&X(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),Z=new Y({baseUrl:"https://around.nomoreparties.co/v1",headers:{authorization:"4f0ec2d8-0a82-401b-be94-8d93fd8bc4fc","Content-Type":"application/json"}});Z.me="/web_es_07/users/me",Z.cards="/web_es_07/cards",Z.avatar="/web_es_07/users/me/avatar",Z.likes=Z.cards+"/likes";var tt=new G(p),et=new q(l);Z.do("GET",Z.me).then((function(t){console.log(t);var e=new J(t);Z.do("GET",Z.cards).then((function(n){var u=new _({data:n,renderer:function(e){var n=new w({data:e,handleOpenClick:function(t,e){et.open(t,e)},handleDeleteClick:function(t){var e=new U({handleFormSubmit:function(){Z.do("DELETE",Z.cards,t).then(n.handleRemover()).catch((function(t){return tt.open(t)})).finally((function(){return e.close()}))}},s);e.open()},handleLikeClick:function(e,n){e.find((function(e){return e._id===t._id}))?Z.do("DELETE",Z.likes,n).then(e.pop()).catch((function(t){return tt.open(t)})):Z.do("PUT",Z.likes,n).then(e.push(t)).catch((function(t){return tt.open(t)}))}},v),r=n.renderCard();n.isVerified(t),u.addItem(r)}},".cards");u.renderItems();var c=new U({handleFormSubmit:function(e){Z.send("POST",Z.cards,(function(){return{name:(t=e).name,link:t.link};var t})).then((function(e){var n=new w({data:e[0],handleOpenClick:function(t,e){et.open(t,e)},handleDeleteClick:function(t){var e=new U({handleFormSubmit:function(){Z.do("DELETE",Z.cards,t).then(n.handleRemover()).catch((function(t){return tt.open(t)})).finally((function(){return e.close()}))}},s);e.open()},handleLikeClick:function(e,n){e.find((function(e){return e._id===t._id}))?Z.do("DELETE",Z.likes,n).then(e.pop()).catch((function(t){return tt.open(t)})):Z.do("PUT",Z.likes,n).then(e.push(t)).catch((function(t){return tt.open(t)}))}},v),r=n.renderCard();u.addItem(r,"prepend")})).catch((function(t){return tt.open(t)})).finally((function(){return c.close()}))}},a);o.onclick=function(){var t=document.forms.profileForm.elements,n=t.name,r=t.about;nt.open(),n.value=e.getUserInfo().name,r.value=e.getUserInfo().about},r.onclick=function(){return rt.open()},i.onclick=function(){return c.open()},e.setUserInfo(),e.setAvatar()})).catch((function(t){return tt.open(t)}))})).catch((function(t){return tt.open(t)}));var nt=new U({handleFormSubmit:function(t){Z.send("PATCH",Z.me,(function(){return{name:(e=t).name,about:e.about};var e})).then((function(t){var e=new J(t);e.setUserInfo(),o.onclick=function(){var t=document.forms.profileForm.elements,n=t.name,r=t.about;nt.open(),n.value=e.getUserInfo().name,r.value=e.getUserInfo().about}})).catch((function(t){return tt.open(t)})).finally((function(){return nt.close()}))}},c),rt=new U({handleFormSubmit:function(t){Z.send("PATCH",Z.avatar,(function(){return{avatar:t.avatar}}),Z.me).then((function(t){new J(t).setAvatar()})).catch((function(t){return tt.open(t)})).finally((function(){return rt.close()}))}},f);h.forEach((function(t){new Q(b,t).enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,